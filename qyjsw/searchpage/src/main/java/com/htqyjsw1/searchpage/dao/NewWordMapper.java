package com.htqyjsw1.searchpage.dao;

import com.htqyjsw1.searchpage.domain.NewWordDomain;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;

import java.util.Date;
import java.util.List;

public interface NewWordMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_newentity
     *
     * @mbg.generated Fri Nov 29 14:57:26 CST 2019
     */
    int deleteByPrimaryKey(Date conTime);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_newentity
     *
     * @mbg.generated Fri Nov 29 14:57:26 CST 2019
     */
    int insert(NewWordDomain record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_newentity
     *
     * @mbg.generated Fri Nov 29 14:57:26 CST 2019
     */
    int insertSelective(NewWordDomain record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_newentity
     *
     * @mbg.generated Fri Nov 29 14:57:26 CST 2019
     */
    NewWordDomain selectByPrimaryKey(Date conTime);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_newentity
     *
     * @mbg.generated Fri Nov 29 14:57:26 CST 2019
     */
    int updateByPrimaryKeySelective(NewWordDomain record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_newentity
     *
     * @mbg.generated Fri Nov 29 14:57:26 CST 2019
     */
    int updateByPrimaryKey(NewWordDomain record);

    /**
     * 查询当天新词数据
     * @return：当天新词数据
     */
    @Select("SELECT * FROM t_newentity Where TO_DAYS(con_time) = TO_DAYS(NOW())")
    @Results({
            @Result(property = "newEntity", column = "new_entity"),
            @Result(property = "conTime", column = "con_time"),
    })
    List<NewWordDomain> queryDayNewWord();

    /**
     * 计算当天新词数据条数
     * @return：当天新词数据条数
     */
    @Select("SELECT COUNT(*) FROM t_newentity Where TO_DAYS(con_time) = TO_DAYS(NOW())")
    int countDayNewWord();

    /**
     * 查询近1周新词数据
     * @return：近1周新词数据
     */
    @Select("SELECT * FROM t_newentity Where con_time>DATE_SUB(CURDATE(), INTERVAL 1 WEEK)")
    @Results({
            @Result(property = "newEntity", column = "new_entity"),
            @Result(property = "conTime", column = "con_time"),
    })
    List<NewWordDomain> queryWeekNewWord();

    /**
     * 计算近1周新词数据条数
     * @return：近1周新词数据条数
     */
    @Select("SELECT COUNT(*) FROM t_newentity Where con_time>DATE_SUB(CURDATE(), INTERVAL 1 WEEK)")
    int countWeekNewWord();

    /**
     * 查询近1月新词数据
     * @param offset：偏移量
     * @param limit：每页数量
     * @return：近1月新词数据
     */
    @Select("SELECT * FROM t_newentity Where con_time>DATE_SUB(CURDATE(), INTERVAL 1 MONTH) limit #{offset},#{limit}")
    @Results({
            @Result(property = "newEntity", column = "new_entity"),
            @Result(property = "conTime", column = "con_time"),
    })
    List<NewWordDomain> queryMonthNewWord(int offset, int limit);

    /**
     * 计算近1月新词数据条数
     * @return：近1月新词数据条数
     */
    @Select("SELECT COUNT(*) FROM t_newentity Where con_time>DATE_SUB(CURDATE(), INTERVAL 1 MONTH)")
    int countMonthNewWord();

    /**
     * 查询一段时间内新词数据
     * @param startTime：起始时间
     * @param endTime：结束时间
     * @param offset：偏移量
     * @param limit：每页数量
     * @return：一段时间内新词数据
     */
    @Select("SELECT * FROM t_newentity Where con_time>=#{startTime} and con_time<=#{endTime} limit #{offset},#{limit}")
    @Results({
            @Result(property = "newEntity", column = "new_entity"),
            @Result(property = "conTime", column = "con_time"),
    })
    List<NewWordDomain> queryPartNewWord(String startTime, String endTime, int offset, int limit);

    /**
     * 计算一段时间内新词数据条数
     * @param startTime：起始时间
     * @param endTime：结束时间
     * @return：一段时间内新词数据条数
     */
    @Select("SELECT COUNT(*) FROM t_newentity Where con_time>=#{startTime} and con_time<=#{endTime}")
    int countPartNewWord(String startTime, String endTime);
}